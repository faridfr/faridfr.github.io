{"version":3,"sources":["components/homepage/Images.js","components/homepage/SkillItem.js","components/homepage/Experience.js","components/homepage/Skills.js","components/homepage/Divider.js","components/homepage/Contact.js","components/homepage/About.js","components/homepage/Info.js","App.js","serviceWorker.js","index.js"],"names":["MypicDiv","styled","div","process","App","className","onclick","id","style","float","fontFamily","padding","margin","src","alt","textAlign","fontSize","marginTop","width","SkillItem","Experience","props","size","Info","color","Divider","About","Skills","Contact","Images","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"ugBAGA,IAAMA,EAAWC,IAAOC,IAAV,IACYC,2BAeXC,MARf,WACC,OACC,kBAACJ,EAAD,CAAUK,UAAU,QAAQC,QAAQ,iBAAiBC,GAAG,YACvD,yBAAKA,GAAG,cCEIH,MAdf,WACC,OACC,yBAAKC,UAAU,SACd,yBAAKA,UAAU,aAAf,mBACA,0BACCA,UAAU,sBACVG,MAAO,CAAEC,MAAO,QAASC,WAAY,UAFtC,YC6BYN,MAjCf,WACC,OACC,yBAAKC,UAAU,MAAME,GAAG,UAAUC,MAAO,CAAEG,QAAS,MAAOC,OAAQ,QAClE,yBAAKP,UAAU,SACd,yBACCQ,IAAG,UAAKV,0BAAL,gCACHE,UAAU,yBACVS,IAAI,aAGN,yBAAKT,UAAU,SACd,wBAAIG,MAAO,CAAEE,WAAY,UAAzB,kBAED,yBAAKL,UAAU,SACd,wBAAIG,MAAO,CAAEE,WAAY,QAASD,MAAO,UAAzC,uBAID,yBACCJ,UAAU,kBACVG,MAAO,CAAEO,UAAW,UAAWC,SAAU,WAEzC,6QCWWZ,MA7Bf,WACC,OACC,yBAAKC,UAAU,UACd,yBAAKA,UAAU,SAAf,YACU,6BADV,eAIA,yBAAKA,UAAU,eACd,yBAAKA,UAAU,cACd,yBAAKA,UAAU,SAASG,MAAO,CAAES,UAAW,SAC3C,yBAAKZ,UAAU,0BAAf,eACA,yBAAKA,UAAU,WAAWG,MAAO,CAAES,UAAW,SAC7C,yBACCZ,UAAU,uBACVG,MAAO,CAAEU,MAAO,WAInB,kBAACC,EAAD,OAGD,yBAAKd,UAAU,iBAAiBG,MAAO,CAAES,UAAW,SACnD,kBAACG,EAAD,UCrBUhB,EAJH,SAAAiB,GACX,OAAO,yBAAKhB,UAAS,gBAAWgB,EAAMC,SCYxBlB,MAZf,WACC,OACC,yBAAKC,UAAU,WACd,yBAAKA,UAAU,SAAf,cACA,yBAAKA,UAAU,cAAcG,MAAO,CAAEE,WAAY,UAAlD,mBACiB,6BADjB,4BCUYN,MAdf,WACC,OACC,yBAAKC,UAAU,SACd,yBAAKA,UAAU,SAAf,YACA,yBAAKA,UAAU,eAAf,oP,6MCCH,IAAMkB,EAAOtB,IAAOC,IAAV,KA8BKE,MArBf,WACC,OACC,kBAACmB,EAAD,CAAMlB,UAAU,SACf,yBAAKA,UAAU,SACd,mCACA,mCACK,0BAAMG,MAAO,CAAEgB,MAAO,YAAtB,YADL,UAGA,sDAGD,kBAACC,EAAD,CAASH,KAAK,UACd,kBAACI,EAAD,MACA,kBAACD,EAAD,CAASH,KAAK,UACd,kBAACK,EAAD,MACA,kBAACF,EAAD,CAASH,KAAK,UACd,kBAACM,EAAD,QChBYxB,MAXf,WACC,OACC,yBAAKC,UAAU,mBACd,yBAAKA,UAAU,OACd,kBAACwB,EAAD,MACA,kBAAC,EAAD,SCAgBC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,SD0HnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.191ca56b.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst MypicDiv = styled.div`\r\n\tbackground-image: url('${process.env.PUBLIC_URL}/img/1.jpg');\r\n\tbackground-color: #1d1d1d;\r\n\tbackground-size: cover;\r\n\tbackground-position: center;\r\n\theight: 100vh;\r\n\tposition: sticky;\r\n`;\r\nfunction App() {\r\n\treturn (\r\n\t\t<MypicDiv className='col-6' onclick='clickOnMyPic()' id='mypicDiv'>\r\n\t\t\t<div id='overlay'></div>\r\n\t\t</MypicDiv>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className='col-6'>\r\n\t\t\t<div className='skillName'>PHP Fundamental</div>\r\n\t\t\t<span\r\n\t\t\t\tclassName='badge badge-warning'\r\n\t\t\t\tstyle={{ float: 'right', fontFamily: 'farid' }}\r\n\t\t\t>\r\n\t\t\t\tSENIOR\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className='row' id='farazin' style={{ padding: '0px', margin: '0px' }}>\r\n\t\t\t<div className='col-1'>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={`${process.env.PUBLIC_URL}/img/logos/farazin-color.png`}\r\n\t\t\t\t\tclassName='img-fluid company-logo'\r\n\t\t\t\t\talt='Farazin'\r\n\t\t\t\t></img>\r\n\t\t\t</div>\r\n\t\t\t<div className='col-6'>\r\n\t\t\t\t<h4 style={{ fontFamily: 'farid' }}>CTO - Farazin</h4>\r\n\t\t\t</div>\r\n\t\t\t<div className='col-5'>\r\n\t\t\t\t<h6 style={{ fontFamily: 'farid', float: 'right' }}>\r\n\t\t\t\t\tAug 2018 - Present\r\n\t\t\t\t</h6>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName='col-11 offset-1'\r\n\t\t\t\tstyle={{ textAlign: 'justify', fontSize: '0.8rem' }}\r\n\t\t\t>\r\n\t\t\t\t<h6>\r\n\t\t\t\t\tLeader of development team , schema designer and Back-End developer .\r\n\t\t\t\t\tOur target is making automate all actions in factory , such as\r\n\t\t\t\t\tadministrative affairs, production planning, accounting and\r\n\t\t\t\t\twarehousing, production line monitoring .\r\n\t\t\t\t</h6>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport SkillItem from './SkillItem';\r\nimport ExperienceItem from './Experience';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.css';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className='skills'>\r\n\t\t\t<div className='title'>\r\n\t\t\t\tSkills & <br></br>Exprerience\r\n\t\t\t</div>\r\n\r\n\t\t\t<div className='description'>\r\n\t\t\t\t<div className='row skills'>\r\n\t\t\t\t\t<div className='col-12' style={{ marginTop: '35px' }}>\r\n\t\t\t\t\t\t<div className='skillName backendTitle'>SERVER SIDE</div>\r\n\t\t\t\t\t\t<div className='progress' style={{ marginTop: '10px' }}>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName='progress-bar backend'\r\n\t\t\t\t\t\t\t\tstyle={{ width: '85%' }}\r\n\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<SkillItem></SkillItem>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className='row experience' style={{ marginTop: '60px' }}>\r\n\t\t\t\t\t<ExperienceItem></ExperienceItem>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport '../../App.css';\r\n\r\nconst App = props => {\r\n\treturn <div className={`clear-${props.size}`}></div>;\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.css';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className='contact'>\r\n\t\t\t<div className='title'>Contact Me</div>\r\n\t\t\t<div className='description' style={{ fontFamily: 'farid' }}>\r\n\t\t\t\t+98 936-496-1262<br></br>\r\n\t\t\t\tfroozan [at] yahoo.com\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.css';\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<div className='about'>\r\n\t\t\t<div className='title'>About Me</div>\r\n\t\t\t<div className='description'>\r\n\t\t\t\tLorem ipsum dolor sit amet consectetur adipisicing elit. Aut, autem!\r\n\t\t\t\tTemporibus perspiciatis soluta possimus incidunt, necessitatibus tempore\r\n\t\t\t\taccusantium ab pariatur praesentium ea quo tenetur doloribus nulla,\r\n\t\t\t\tsunt, minus mollitia libero!\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.css';\r\nimport Skills from './Skills';\r\nimport Divider from './Divider';\r\nimport Contact from './Contact';\r\nimport About from './About';\r\n\r\nconst Info = styled.div`\r\n\theight: 100vh;\r\n\toverflow-y: scroll;\r\n\tbackground-color: #1d1d1d;\r\n\tposition: relative;\r\n\tcolor: white;\r\n\tpadding: 50px 50px;\r\n`;\r\n\r\nfunction App() {\r\n\treturn (\r\n\t\t<Info className='col-6'>\r\n\t\t\t<div className='intro'>\r\n\t\t\t\t<h1>Hi,</h1>\r\n\t\t\t\t<h1>\r\n\t\t\t\t\tI'm <span style={{ color: '#FD1056' }}>Farid Fr</span>oozan,\r\n\t\t\t\t</h1>\r\n\t\t\t\t<h1>Full Stack Developer.</h1>\r\n\t\t\t</div>\r\n\r\n\t\t\t<Divider size='large'></Divider>\r\n\t\t\t<About></About>\r\n\t\t\t<Divider size='large'></Divider>\r\n\t\t\t<Skills></Skills>\r\n\t\t\t<Divider size='large'></Divider>\r\n\t\t\t<Contact></Contact>\r\n\t\t</Info>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport './css/jquery.toast.css';\nimport Images from './components/homepage/Images';\nimport Info from './components/homepage/Info';\n\nfunction App() {\n\treturn (\n\t\t<div className='container-fluid'>\n\t\t\t<div className='row'>\n\t\t\t\t<Images></Images>\n\t\t\t\t<Info></Info>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}