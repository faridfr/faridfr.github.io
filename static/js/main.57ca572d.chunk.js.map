{"version":3,"sources":["components/homepage/Images.js","components/homepage/SkillItem.js","components/homepage/Skills.js","components/homepage/Divider.js","components/homepage/Contact.js","components/homepage/About.js","components/homepage/Intro.js","components/homepage/ExperienceItem.js","components/homepage/Experiences.js","components/homepage/Info.js","App.js","serviceWorker.js","index.js"],"names":["MypicDiv","styled","div","process","App","className","onclick","id","SkillItem","props","badgeClass","skill","degree","name","style","float","fontFamily","toUpperCase","Skills","skills","map","marginTop","marginBottom","color","header","width","percent","backgroundColor","Divider","size","Contact","contact","mobile","email","About","about","Intro","info","split","substring","length","jobTitle","ExperienceItem","experience","title","margin","padding","src","logo","alt","time","textAlign","fontSize","description","Experience","experiences","Info","data","settings","InfoContainer","textColor","Experiences","Images","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"ugBAGA,IAAMA,EAAWC,IAAOC,IAAV,IACYC,2BAmBXC,MAZf,WACC,OACC,kBAACJ,EAAD,CACCK,UAAU,qBACVC,QAAQ,iBACRC,GAAG,YAEH,yBAAKA,GAAG,cCaIC,EA7BG,SAAAC,GACjB,IAAIC,EAAa,QACXC,EAAQF,EAAME,MACpB,OAAQA,EAAMC,QACb,IAAK,SACJF,EAAa,UACb,MACD,IAAK,eACJA,EAAa,QACb,MACD,IAAK,SACJA,EAAa,OACb,MACD,QACCA,EAAa,QAEf,OACC,yBAAKL,UAAU,sBACd,yBAAKA,UAAU,aAAaM,EAAME,MAClC,0BACCR,UAAS,sBAAiBK,GAC1BI,MAAO,CAAEC,MAAO,QAASC,WAAY,UAEpCL,EAAMC,OAAOK,iBC4BHC,EAhDA,SAAAT,GACd,IAAMU,EAASV,EAAMU,OAErB,OACC,yBAAKd,UAAU,UACd,yBAAKA,UAAU,SAAf,YACU,6BADV,eAGCc,EAAOC,KAAI,SAAAT,GAAK,OAChB,yBAAKN,UAAU,eACd,yBAAKA,UAAU,cACd,yBACCA,UAAU,SACVS,MAAO,CAAEO,UAAW,OAAQC,aAAc,SAE1C,yBACCjB,UAAU,YACVS,MAAO,CACNS,MAAOZ,EAAMa,OAAOD,QAGpBZ,EAAMa,OAAOX,KAAKI,eAEpB,yBACCZ,UAAU,WACVS,MAAO,CACNO,UAAW,SAGZ,yBACChB,UAAU,eACVS,MAAO,CACNW,MAAOd,EAAMa,OAAOE,QAAU,IAC9BC,gBAAiBhB,EAAMa,OAAOD,WAKjCZ,EAAMQ,OAAOC,KAAI,SAAAT,GAAK,OACtB,kBAAC,EAAD,CAAWA,MAAOA,cCrCViB,EAJC,SAAAnB,GACf,OAAO,yBAAKJ,UAAS,gBAAWI,EAAMoB,SCcxBC,EAdC,SAAArB,GACf,IAAMsB,EAAUtB,EAAMsB,QACtB,OACC,yBAAK1B,UAAU,WACd,yBAAKA,UAAU,SAAf,cACA,yBAAKA,UAAU,cAAcS,MAAO,CAAEE,WAAY,UAChDe,EAAQC,OACT,6BACCD,EAAQE,SCEEC,EAVD,SAAAzB,GACb,IAAM0B,EAAQ1B,EAAM0B,MACpB,OACC,yBAAK9B,UAAU,SACd,yBAAKA,UAAU,SAAf,YACA,yBAAKA,UAAU,eAAe8B,KCelBC,EAtBD,SAAA3B,GACb,IAAM4B,EAAO5B,EAAM4B,KAEnB,OACC,yBAAKhC,UAAU,SACd,mCACA,kCACK,IACJ,0BAAMS,MAAO,CAAES,MAAO,YACpBc,EAAKxB,KAAKyB,MAAM,KAAK,GADvB,IAC4BD,EAAKxB,KAAKyB,MAAM,KAAK,GAAGC,UAAU,EAAG,IAEhEF,EAAKxB,KAAK0B,UACVF,EAAKxB,KAAKyB,MAAM,KAAK,GAAGE,OAAS,EACjCH,EAAKxB,KAAK2B,QAPZ,KAWA,4BAAKH,EAAKI,YCiBEC,EAlCQ,SAAAjC,GACtB,IAAMkC,EAAalC,EAAMkC,WAEzB,OACC,yBACCtC,UAAU,MACVE,GAAIoC,EAAWC,MACf9B,MAAO,CAAE+B,OAAQ,MAAOC,QAAS,QAEjC,yBAAKzC,UAAU,8BACd,yBACC0C,IAAG,UAAK5C,0BAAL,YAA+BwC,EAAWK,MAC7C3C,UAAU,yBACV4C,IAAKN,EAAWC,SAGlB,yBAAKvC,UAAU,sBACd,wBAAIS,MAAO,CAAEE,WAAY,UAAY2B,EAAWC,QAEjD,yBAAKvC,UAAU,sBACd,wBAAIS,MAAO,CAAEE,WAAY,QAASD,MAAO,UACvC4B,EAAWO,OAGd,yBACC7C,UAAU,wBACVS,MAAO,CAAEqC,UAAW,UAAWC,SAAU,WAEzC,4BAAKT,EAAWU,gBCXLC,EAfI,SAAA7C,GAClB,IAAM8C,EAAc9C,EAAM8C,YAE1B,OACC,yBAAKlD,UAAU,iBAAiBS,MAAO,CAAEO,UAAW,SAClDkC,EAAYnC,KAAI,SAAAuB,GAAU,OAC1B,kBAAC,WAAD,KACC,kBAAC,EAAD,CAAgBA,WAAYA,IAC5B,kBAAC,EAAD,CAASd,KAAK,iB,iNCDnB,IA2Be2B,EA3BF,SAAA/C,GAAU,IAAD,EACoCA,EAAMgD,KAAvDpB,EADa,EACbA,KAAMlB,EADO,EACPA,OAAQoC,EADD,EACCA,YAAaxB,EADd,EACcA,QAAS2B,EADvB,EACuBA,SAEtCC,EAAgB1D,IAAOC,IAAV,IAGEwD,EAAS/B,gBAEpB+B,EAASE,UACPF,EAASZ,SAGrB,OACC,kBAACa,EAAD,CAAetD,UAAU,sBACxB,kBAAC,EAAD,CAAOgC,KAAMA,IACb,kBAAC,EAAD,CAASR,KAAK,UACd,kBAAC,EAAD,CAAOM,MAAOE,EAAKF,QACnB,kBAAC,EAAD,CAASN,KAAK,UACd,kBAAC,EAAD,CAAQV,OAAQA,IAChB,kBAAC,EAAD,CAASU,KAAK,UACd,kBAACgC,EAAD,CAAaN,YAAaA,IAC1B,kBAAC,EAAD,CAAS1B,KAAK,UACd,kBAAC,EAAD,CAASE,QAASA,MC1Bf0B,EAAO,CACZC,SAAU,CACTE,UAAW,QACXjC,gBAAiB,UACjBmB,QAAS,MAEVT,KAAM,CACLxB,KAAM,gBACN4B,SAAU,uBACVN,MACC,oQAEFJ,QAAS,CACRC,OAAQ,mBACRC,MAAO,0BAERd,OAAQ,CACP,CACCK,OAAQ,CACPX,KAAM,cACNU,MAAO,wBACPG,QAAS,MAEVP,OAAQ,CACP,CAAEN,KAAM,MAAOD,OAAQ,UACvB,CAAEC,KAAM,UAAWD,OAAQ,kBAG7B,CACCY,OAAQ,CACPX,KAAM,cACNU,MAAO,wBACPG,QAAS,MAEVP,OAAQ,CACP,CAAEN,KAAM,MAAOD,OAAQ,UACvB,CAAEC,KAAM,UAAWD,OAAQ,mBAI9B2C,YAAa,CACZ,CACCP,KAAM,8BACNJ,MAAO,gBACPM,KAAM,qBACNG,YACC,0OAEF,CACCL,KAAM,8BACNJ,MAAO,gBACPM,KAAM,qBACNG,YACC,4OAgBWjD,MAXf,WACC,OACC,yBAAKC,UAAU,mBACd,yBAAKA,UAAU,OACd,kBAACyD,EAAD,MACA,kBAAC,EAAD,CAAML,KAAMA,OC1DIM,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCbNC,IAASC,OACR,kBAAC,IAAMC,WAAP,KACC,kBAAC,EAAD,OAEDC,SAASC,eAAe,SD0HnB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.57ca572d.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst MypicDiv = styled.div`\r\n\tbackground-image: url('${process.env.PUBLIC_URL}/img/1.jpg');\r\n\tbackground-color: #1d1d1d;\r\n\tbackground-size: cover;\r\n\tbackground-position: center;\r\n\theight: 100vh;\r\n\tposition: sticky;\r\n`;\r\nfunction App() {\r\n\treturn (\r\n\t\t<MypicDiv\r\n\t\t\tclassName='col-lg-6 col-sm-12'\r\n\t\t\tonclick='clickOnMyPic()'\r\n\t\t\tid='mypicDiv'\r\n\t\t>\r\n\t\t\t<div id='overlay'></div>\r\n\t\t</MypicDiv>\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\n\r\nconst SkillItem = props => {\r\n\tlet badgeClass = 'light';\r\n\tconst skill = props.skill;\r\n\tswitch (skill.degree) {\r\n\t\tcase 'senior':\r\n\t\t\tbadgeClass = 'warning';\r\n\t\t\tbreak;\r\n\t\tcase 'intermediate':\r\n\t\t\tbadgeClass = 'light';\r\n\t\t\tbreak;\r\n\t\tcase 'junior':\r\n\t\t\tbadgeClass = 'dark';\r\n\t\t\tbreak;\r\n\t\tdefault:\r\n\t\t\tbadgeClass = 'light';\r\n\t}\r\n\treturn (\r\n\t\t<div className='col-lg-6 col-sm-12'>\r\n\t\t\t<div className='skillName'>{skill.name}</div>\r\n\t\t\t<span\r\n\t\t\t\tclassName={`badge badge-${badgeClass}`}\r\n\t\t\t\tstyle={{ float: 'right', fontFamily: 'farid' }}\r\n\t\t\t>\r\n\t\t\t\t{skill.degree.toUpperCase()}\r\n\t\t\t</span>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default SkillItem;\r\n","import React from 'react';\r\nimport SkillItem from './SkillItem';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.css';\r\n\r\nconst Skills = props => {\r\n\tconst skills = props.skills;\r\n\r\n\treturn (\r\n\t\t<div className='skills'>\r\n\t\t\t<div className='title'>\r\n\t\t\t\tSkills & <br></br>Exprerience\r\n\t\t\t</div>\r\n\t\t\t{skills.map(skill => (\r\n\t\t\t\t<div className='description'>\r\n\t\t\t\t\t<div className='row skills'>\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclassName='col-12'\r\n\t\t\t\t\t\t\tstyle={{ marginTop: '35px', marginBottom: '15px' }}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName='skillName'\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tcolor: skill.header.color\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{skill.header.name.toUpperCase()}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\tclassName='progress'\r\n\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\tmarginTop: '10px'\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tclassName='progress-bar'\r\n\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\twidth: skill.header.percent + '%',\r\n\t\t\t\t\t\t\t\t\t\tbackgroundColor: skill.header.color\r\n\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t></div>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t{skill.skills.map(skill => (\r\n\t\t\t\t\t\t\t<SkillItem skill={skill}></SkillItem>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Skills;\r\n","import React from 'react';\r\nimport '../../App.css';\r\n\r\nconst Divider = props => {\r\n\treturn <div className={`clear-${props.size}`}></div>;\r\n};\r\n\r\nexport default Divider;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.css';\r\n\r\nconst Contact = props => {\r\n\tconst contact = props.contact;\r\n\treturn (\r\n\t\t<div className='contact'>\r\n\t\t\t<div className='title'>Contact Me</div>\r\n\t\t\t<div className='description' style={{ fontFamily: 'farid' }}>\r\n\t\t\t\t{contact.mobile}\r\n\t\t\t\t<br></br>\r\n\t\t\t\t{contact.email}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Contact;\r\n","import React from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.css';\r\n\r\nconst About = props => {\r\n\tconst about = props.about;\r\n\treturn (\r\n\t\t<div className='about'>\r\n\t\t\t<div className='title'>About Me</div>\r\n\t\t\t<div className='description'>{about}</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default About;\r\n","import React from 'react';\r\n\r\nconst Intro = props => {\r\n\tconst info = props.info;\r\n\r\n\treturn (\r\n\t\t<div className='intro'>\r\n\t\t\t<h1>Hi,</h1>\r\n\t\t\t<h1>\r\n\t\t\t\tI'm{' '}\r\n\t\t\t\t<span style={{ color: '#FD1056' }}>\r\n\t\t\t\t\t{info.name.split(' ')[0]} {info.name.split(' ')[1].substring(0, 2)}\r\n\t\t\t\t</span>\r\n\t\t\t\t{info.name.substring(\r\n\t\t\t\t\tinfo.name.split(' ')[0].length + 3,\r\n\t\t\t\t\tinfo.name.length\r\n\t\t\t\t)}\r\n\t\t\t\t,\r\n\t\t\t</h1>\r\n\t\t\t<h1>{info.jobTitle}</h1>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Intro;\r\n","import React from 'react';\r\n\r\nconst ExperienceItem = props => {\r\n\tconst experience = props.experience;\r\n\r\n\treturn (\r\n\t\t<div\r\n\t\t\tclassName='row'\r\n\t\t\tid={experience.title}\r\n\t\t\tstyle={{ margin: '0px', padding: '0px' }}\r\n\t\t>\r\n\t\t\t<div className='col-lg-1 d-none d-lg-block'>\r\n\t\t\t\t<img\r\n\t\t\t\t\tsrc={`${process.env.PUBLIC_URL}/${experience.logo}`}\r\n\t\t\t\t\tclassName='img-fluid company-logo'\r\n\t\t\t\t\talt={experience.title}\r\n\t\t\t\t></img>\r\n\t\t\t</div>\r\n\t\t\t<div className='col-lg-6 col-sm-10'>\r\n\t\t\t\t<h4 style={{ fontFamily: 'farid' }}>{experience.title}</h4>\r\n\t\t\t</div>\r\n\t\t\t<div className='col-lg-5 col-sm-12'>\r\n\t\t\t\t<h6 style={{ fontFamily: 'farid', float: 'right' }}>\r\n\t\t\t\t\t{experience.time}\r\n\t\t\t\t</h6>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName='col-lg-11 offset-lg-1'\r\n\t\t\t\tstyle={{ textAlign: 'justify', fontSize: '0.8rem' }}\r\n\t\t\t>\r\n\t\t\t\t<h6>{experience.description}</h6>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default ExperienceItem;\r\n","import React, { Fragment } from 'react';\r\nimport ExperienceItem from './ExperienceItem';\r\nimport Divider from './Divider';\r\n\r\nconst Experience = props => {\r\n\tconst experiences = props.experiences;\r\n\r\n\treturn (\r\n\t\t<div className='row experience' style={{ marginTop: '60px' }}>\r\n\t\t\t{experiences.map(experience => (\r\n\t\t\t\t<Fragment>\r\n\t\t\t\t\t<ExperienceItem experience={experience}></ExperienceItem>\r\n\t\t\t\t\t<Divider size='medium'></Divider>\r\n\t\t\t\t</Fragment>\r\n\t\t\t))}\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Experience;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport '../../App.css';\r\nimport Skills from './Skills';\r\nimport Divider from './Divider';\r\nimport Contact from './Contact';\r\nimport About from './About';\r\nimport Intro from './Intro';\r\nimport Experiences from './Experiences';\r\n\r\nconst Info = props => {\r\n\tconst { info, skills, experiences, contact, settings } = props.data;\r\n\r\n\tconst InfoContainer = styled.div`\r\n\t\theight: 100vh;\r\n\t\toverflow-y: scroll;\r\n\t\tbackground-color: ${settings.backgroundColor};\r\n\t\tposition: relative;\r\n\t\tcolor: ${settings.textColor};\r\n\t\tpadding: ${settings.padding}px;\r\n\t`;\r\n\r\n\treturn (\r\n\t\t<InfoContainer className='col-lg-6 col-sm-12'>\r\n\t\t\t<Intro info={info}></Intro>\r\n\t\t\t<Divider size='large'></Divider>\r\n\t\t\t<About about={info.about}></About>\r\n\t\t\t<Divider size='large'></Divider>\r\n\t\t\t<Skills skills={skills}></Skills>\r\n\t\t\t<Divider size='large'></Divider>\r\n\t\t\t<Experiences experiences={experiences}></Experiences>\r\n\t\t\t<Divider size='large'></Divider>\r\n\t\t\t<Contact contact={contact}></Contact>\r\n\t\t</InfoContainer>\r\n\t);\r\n};\r\n\r\nexport default Info;\r\n","import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nimport './css/jquery.toast.css';\nimport Images from './components/homepage/Images';\nimport Info from './components/homepage/Info';\n\nconst data = {\n\tsettings: {\n\t\ttextColor: 'white',\n\t\tbackgroundColor: '#1d1d1d',\n\t\tpadding: '50'\n\t},\n\tinfo: {\n\t\tname: 'Farid Froozan',\n\t\tjobTitle: 'Full Stack Developer',\n\t\tabout:\n\t\t\t'Lorem ipsum dolor sit amet consectetur, adipisicing elit. Unde, reprehenderit culpa, tempore dolorem asperiores nesciunt accusantium quibusdam doloremque voluptate quas aliquam et molestias accusamus velit, incidunt pariatur obcaecati. Cupiditate, laborum?'\n\t},\n\tcontact: {\n\t\tmobile: '+98 936 496 1262',\n\t\temail: 'froozan [at] yahoo.com'\n\t},\n\tskills: [\n\t\t{\n\t\t\theader: {\n\t\t\t\tname: 'server side',\n\t\t\t\tcolor: 'rgb(255, 193, 7, 0.5)',\n\t\t\t\tpercent: '90'\n\t\t\t},\n\t\t\tskills: [\n\t\t\t\t{ name: 'php', degree: 'senior' },\n\t\t\t\t{ name: 'node js', degree: 'intermediate' }\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\theader: {\n\t\t\t\tname: 'client side',\n\t\t\t\tcolor: 'rgb(8, 253, 216, 0.5)',\n\t\t\t\tpercent: '60'\n\t\t\t},\n\t\t\tskills: [\n\t\t\t\t{ name: 'php', degree: 'senior' },\n\t\t\t\t{ name: 'node js', degree: 'intermediate' }\n\t\t\t]\n\t\t}\n\t],\n\texperiences: [\n\t\t{\n\t\t\tlogo: 'img/logos/farazin-color.png',\n\t\t\ttitle: 'CTO - Farazin',\n\t\t\ttime: 'Aug 2018 - Present',\n\t\t\tdescription:\n\t\t\t\t'Leader of development team , schema designer and Back-End developer Our target is making automate all actions in factory , such asadministrative affairs, production planning, accounting andwarehousing, production line monitoring .'\n\t\t},\n\t\t{\n\t\t\tlogo: 'img/logos/farazin-color.png',\n\t\t\ttitle: 'CTO - Farazin',\n\t\t\ttime: 'Aug 2018 - Present',\n\t\t\tdescription:\n\t\t\t\t'Leader of development team , schema designer and Back-End developer Our target is making automate all actions in factory , such asadministrative affairs, production planning, accounting andwarehousing, production line monitoring .'\n\t\t}\n\t]\n};\n\nfunction App() {\n\treturn (\n\t\t<div className='container-fluid'>\n\t\t\t<div className='row'>\n\t\t\t\t<Images></Images>\n\t\t\t\t<Info data={data}></Info>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<App />\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}